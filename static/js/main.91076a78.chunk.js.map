{"version":3,"sources":["Components/Searchbar/Searchbar.module.css","Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","Components/Button/Button.module.css","Components/ImageGallery/ImageGallery.module.css","App.module.css","Components/Searchbar/Searchbar.js","services/pixabayApi.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/Button/Button.js","Components/ImageGallery/ImageGallery.js","Components/Modal/Modal.js","Components/ImageGallery/LargeImg/LargeImg.jsx","App.js","index.js"],"names":["module","exports","Searchbar","state","search","handleSearchChange","evt","event","currentTarget","setState","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","props","onSubmitForm","className","styles","onSubmit","this","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","onChange","placeholder","Component","propsTypes","PropTypes","string","pixabayApi","searchValue","page","axios","ImageGallery","id","webformatURL","alt","onImageClick","ImageGalleryItem","src","ImageGalleryItemImage","onClick","Button","loadMore","buttonName","func","gallery","status","handleOnImageClick","e","forEach","gal","Number","target","parentElement","largeImageURL","tags","modal","reset","showModal","largeImg","chekingGalleryLength","prev","next","position","handleLoadMore","prevProps","prevState","data","hits","length","color","height","width","style","map","autoClose","defaultProps","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","window","addEventListener","removeEventListener","createPortal","Overlay","children","LargeImg","App","handleSearchFormSubmit","toggleModal","handleLargeImageURL","url","tag","console","log","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91076a78.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3YYEG\",\"SearchForm\":\"Searchbar_SearchForm__1hX1-\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3Txlp\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__2x_EN\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2AFLM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__VPBD0\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3sKCK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__33Ypd\",\"Modal\":\"Modal_Modal__3ihEg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__HOrbw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1hnjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ImSearch } from 'react-icons/im';\nimport styles from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n    state = {\n        search: '',\n    };\n    handleSearchChange = evt => {\n        const event = evt.currentTarget;\n        this.setState({ search: event.value.toLowerCase() });\n    };\n    handleSubmit = event => {\n        event.preventDefault();\n        const { search } = this.state;\n        if (search.trim() === '') {\n            return toast.error('Поле поиска пустое!');\n        }\n        this.props.onSubmitForm(search);\n        this.setState({ search: '' });\n    };\n\n    render() {\n        return (\n            <header className={styles.Searchbar}>\n                <form\n                    onSubmit={this.handleSubmit}\n                    className={styles.SearchForm}\n                >\n                    <button type=\"submit\" className={styles.SearchFormButton}>\n                        <span\n                            type=\"submit\"\n                            className={styles.SearchFormButtonLabel}\n                        >\n                            <ImSearch />\n                        </span>\n                    </button>\n\n                    <input\n                        className={styles.SearchFormInput}\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        value={this.state.search}\n                        onChange={this.handleSearchChange}\n                        placeholder=\"Search images and photos\"\n                    />\n                </form>\n            </header>\n        );\n    }\n}\n\nSearchbar.propsTypes = {\n    search: PropTypes.string,\n};\n","\nimport axios from 'axios';\n\nconst pixabayApi = ( searchValue, page )=> {\n    const apiKey = '19207459-7123426cd96bb4a7307e45de7';\n    const baseUrl = 'https://pixabay.com/api/';\n\n    return axios(`${baseUrl}?q=${searchValue}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`)\n}\n\n\n\nexport default pixabayApi;\n","import PropTypes from 'prop-types';\nimport styles from './ImageGalleryItem.module.css';\n\nfunction ImageGallery({ id, webformatURL, alt, onImageClick }) {\n    return (\n        <li id={id} className={styles.ImageGalleryItem}>\n            <img\n                src={webformatURL}\n                alt={alt}\n                className={styles.ImageGalleryItemImage}\n                onClick={onImageClick}\n            />\n        </li>\n    );\n}\n\nImageGallery.propTypes = {\n    id: PropTypes.number.isRequired,\n    webformatURL: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nexport default function Button({ loadMore, buttonName }) {\n    // console.log(loadMore);\n    return (\n        <button className={styles.Button} type=\"button\" onClick={loadMore}>\n            {buttonName}\n        </button>\n    );\n}\n\nButton.propsTypes = {\n    loadMore: PropTypes.func,\n    buttonName: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport { toast } from 'react-toastify';\nimport 'react-popupbox/dist/react-popupbox.css';\n\nimport pixabayApi from '../../services';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Button from '../Button';\nimport style from './ImageGallery.module.css';\n\nexport default class ImageGallery extends Component {\n    state = {\n        search: '',\n        page: 1,\n        gallery: null,\n        status: 'idle',\n    };\n\n    async componentDidUpdate(prevProps, prevState) {\n        const prev = prevProps.search;\n        const next = this.props.search;\n        if (prev !== next) {\n            this.setState({ status: 'pending' });\n            try {\n                const data = await pixabayApi(next, this.state.page);\n                this.setState({\n                    gallery: data.data.hits,\n                });\n            } catch (error) {\n                this.setState({ status: 'rejected' });\n            }\n            if (this.state.gallery.length !== 0) {\n                this.setState({ status: 'resolved' });\n            } else {\n                this.setState({ status: 'idle' });\n                toast('По вашему запросу ничего не найдено');\n            }\n        }\n        if (prevState.page !== this.state.page) {\n            const data = await pixabayApi(next, this.state.page);\n            this.setState(prevState => ({\n                gallery: [...prevState.gallery, ...data.data.hits],\n            }));\n            this.chekingGalleryLength(\n                prevState.gallery.length,\n                this.state.gallery.length,\n            );\n        }\n    }\n    componentWillUnmount() {\n        // console.log('компонент галлерея размонтирован');\n        this.reset();\n    }\n    handleOnImageClick = e => {\n        this.state.gallery.forEach(gal => {\n            // console.log(largeImageURL);\n            if (gal.id === Number(e.target.parentElement.id)) {\n                this.props.largeImageURL(gal.largeImageURL, gal.tags);\n                // this.props.tags(gal.tags);\n            }\n        });\n        this.setState({ modal: true });\n        // console.log(this.state.largeImg);\n    };\n\n    reset = () => {\n        // console.log('очистился стейт галереи');\n        this.setState({\n            search: '',\n            page: 1,\n            gallery: null,\n            status: 'idle',\n            showModal: 'false',\n            largeImg: '',\n        });\n    };\n    chekingGalleryLength = (prev, next) => {\n        if (prev === next) {\n            toast('Больше по вашему запросу картинок не найдено', {\n                position: 'bottom-center',\n            });\n        }\n    };\n\n    handleLoadMore = event => {\n        event.preventDefault();\n        this.setState({ page: this.state.page + 1 });\n        // console.log(this.state.page);\n    };\n\n    render() {\n        const { gallery, status } = this.state;\n        if (status === 'idle') {\n            return null;\n        }\n        if (status === 'pending') {\n            return (\n                <Loader\n                    type=\"ThreeDots\"\n                    color=\"#00BFFF\"\n                    height={80}\n                    width={80}\n                />\n            );\n        }\n        if (status === 'resolved') {\n            return (\n                <>\n                    <ul className={style.ImageGallery}>\n                        {gallery &&\n                            gallery.map(({ id, webformatURL, tags }) => (\n                                <ImageGalleryItem\n                                    key={id}\n                                    id={id}\n                                    webformatURL={webformatURL}\n                                    alt={tags}\n                                    onImageClick={this.handleOnImageClick}\n                                />\n                            ))}\n                    </ul>\n                    <Button\n                        loadMore={this.handleLoadMore}\n                        buttonName={'Load More'}\n                    ></Button>\n                </>\n            );\n        }\n        if (status === 'rejected') {\n            toast.error('Оппаньки Приплыли! Попробуйте позже!', {\n                autoClose: false,\n                position: 'top-center',\n            });\n            return null;\n        }\n    }\n}\n\nImageGallery.propTypes = {\n    search: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n};\n\nImageGallery.defaultProps = {\n    id: 0,\n};\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport style from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = e => {\n        if (e.code === 'Escape') {\n            this.props.onClose();\n        }\n    };\n\n    handleBackdropClick = event => {\n        if (event.currentTarget === event.target) {\n            this.props.onClose();\n        }\n    };\n\n    render() {\n        return createPortal(\n            <div className={style.Overlay} onClick={this.handleBackdropClick}>\n                <div className={style.Modal}>{this.props.children}</div>\n            </div>,\n            modalRoot,\n        );\n    }\n}\nModal.propTypes = {\n    onClose: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nfunction LargeImg({ LargeImg, alt }) {\n    return (\n        <>\n            <img src={LargeImg} alt={alt} />\n        </>\n    );\n}\n\nLargeImg.propTypes = {\n    LargeImg: PropTypes.string.isRequired,\n    alt: PropTypes.string,\n};\n\nexport default LargeImg;\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './Components/Searchbar';\nimport ImageGallery from './Components/ImageGallery';\nimport Modal from './Components/Modal';\nimport LargeImg from './Components/ImageGallery/LargeImg';\nimport style from './App.module.css';\n\n// import PropTypes from 'prop-types'\n// import './App.css';\n\nexport default class App extends Component {\n    state = {\n        search: '',\n        showModal: false,\n        largeImageURL: '',\n        tags: '',\n    };\n    componentDidUpdate(prevProps, prevState) {\n        // if (prevState.largeImageURL !== this.state.largeImageURL) {\n        //     this.setState({ showModal: true });\n        //     // this.setState({largeImageURL: ''})\n        // }\n        // if (prevState.showModal === true) {\n        //     this.setState({largeImageURL: ''})\n        // }\n    }\n    // componentWillUnmount() {\n    //     console.log('компонент апп размонтирован');\n    //     this.reset()\n    // }\n\n    handleSearchFormSubmit = search => {\n        // console.log(search);\n        this.setState({ search });\n    };\n\n    toggleModal = () => {\n        this.setState(({ showModal }) => ({\n            showModal: !showModal,\n        }));\n    };\n    handleLargeImageURL = (url, tag) => {\n        this.setState(({ showModal }) => ({\n            showModal: !showModal,\n        }));\n        this.setState({ largeImageURL: url, tags: tag });\n        // this.setState({ ltags: tag });\n        // console.log(this.state.largeImageURL);\n    };\n    reset = () => {\n        console.log('очистился стейт апп');\n        this.setState({\n            search: '',\n            showModal: false,\n            largeImageURL: '',\n            tags: '',\n        });\n    };\n\n    render() {\n        const { showModal, search, largeImageURL, tags } = this.state;\n        return (\n            <div className={style.App}>\n                <Searchbar onSubmitForm={this.handleSearchFormSubmit} />\n                <ToastContainer position=\"top-left\" autoClose={2000} />\n                <ImageGallery\n                    search={search}\n                    largeImageURL={this.handleLargeImageURL}\n                />\n                {showModal && (\n                    <Modal onClose={this.toggleModal}>\n                        <LargeImg LargeImg={largeImageURL} alt={tags} />\n                    </Modal>\n                )}\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}